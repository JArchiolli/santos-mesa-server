generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}
model Category {
  id         Int          @id @default(autoincrement())
  name       String
  restaurant Restaurant[]
}

model Location {
  id         Int          @id @default(autoincrement())
  address    String
  city       String
  number     String
  state      String
  restaurant Restaurant[]
}


model Rating {
  id           Int         @id @default(autoincrement())
  value        Int
  comments     String?
  restaurantId Int
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  userId       Int?
  user         User?       @relation(fields: [userId], references: [id], onDelete: Cascade) 
  createdAt    DateTime    @default(now())
}


model Badge {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  level  Int     @unique
  image  String?
  users  User[]  @relation("UserBadges")
}

model User {
  id             Int         @id @default(autoincrement())
  email          String      @unique
  password       String
  role           String
  profilePicture String?
  rating         Rating[]
  userName       String?
  exibitionName  String?
  favorites      Favorite[]  @relation("userFavorites")
  badges         Badge[]     @relation("UserBadges")
}

model Restaurant {
  id         Int        @id @default(autoincrement())
  name       String
  url_img    String
  aboutUs    String
  categoryId Int?
  category   Category?  @relation(fields: [categoryId], references: [id])
  locationId Int?
  location   Location?  @relation(fields: [locationId], references: [id])
  rating     Rating[]
  favorites  Favorite[] @relation("restaurantFavorites")
}

model Favorite {
  id           Int        @id @default(autoincrement())
  userId       Int
  user         User       @relation(fields: [userId], references: [id], name: "userFavorites")
  restaurantId Int
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], name: "restaurantFavorites", onDelete: Cascade)
  createdAt    DateTime   @default(now())

  @@unique([userId, restaurantId])
}